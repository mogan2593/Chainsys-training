1)Write a PL/SQL program to arrange the number of two variable in such a way that the small number will store in 
num_small variable and large number will store in num_large variable.

DECLARE
num_small NUMBER :=40;
num_large NUMBER :=50;
BEGIN
DBMS_OUTPUT.PUT_LINE('SMALLEST NO IS :' || num_small);
DBMS_OUTPUT.PUT_LINE('BIGGER NO IS :' || num_large);
END;

2.Write a PL/SQL program to check whether a given character is letter or digit.

DECLARE
    get_ctr CHAR(1) := '&input_a_character';
BEGIN
    IF ( get_ctr >= 'C'
         AND get_ctr <= 'Z' )
        OR ( get_ctr >= 'a'
             AND get_ctr <= 'z' ) THEN
      dbms_output.Put_line ('The given character is a letter');
    ELSE
      dbms_output.Put_line ('The given character is not a letter');

      IF get_ctr BETWEEN '0' AND '9' THEN
        dbms_output.Put_line ('The given character is a number');
      ELSE
        dbms_output.Put_line ('The given character is not a number');
      END IF;
    END IF;
END;


3)Write a program in PL/SQL to print the value of a variable inside and outside a loop using LOOP WHEN EXIT statement.

DECLARE
L NUMBER := 1;
BEGIN
LOOP
    
    EXIT WHEN L >5;
    DBMS_OUTPUT.PUT_LINE('INSIDE LOOP : '||L);
    L := L + 1;
END LOOP;
    DBMS_OUTPUT.PUT_LINE('OUTSIDE LOOP : '||L);
END;

4)Write a PL/SQL program to display which day is a specific date
DECLARE
    dt  DATE := To_date('&input_a_date', 'DD-MON-YYYY');
    day VARCHAR2(1);
BEGIN
    day := To_char(t_dt, 'D');

    CASE day
      WHEN '1' THEN
        dbms_output.Put_line ('The date you entered is Sunday.');
      WHEN '2' THEN
        dbms_output.Put_line ('The date you entered is Monday.');
      WHEN '3' THEN
        dbms_output.Put_line ('The date you entered is Tuesday.');
      WHEN '4' THEN
        dbms_output.Put_line ('The date you entered is Wednesday.');
      WHEN '5' THEN
        dbms_output.Put_line ('The date you entered is Thursday.');
      WHEN '6' THEN
        dbms_output.Put_line ('The date you entered is Friday.');
      WHEN '7' THEN
        dbms_output.Put_line ('The date you entered is Saturday.');
    END CASE;
END;

5.Write a PL/SQL procedure to calculate the incentive on a specific target otherwise a general incentive to be paid using IF-THEN-ELSE.

DECLARE
  PROCEDURE test1 (
    sal_achieve  NUMBER,
    target_qty  NUMBER,
    emp_id NUMBER
  )
  IS
    incentive   NUMBER := 0;

  BEGIN
    IF sal_achieve > (target_qty + 200) THEN
      incentive := (sal_achieve - target_qty)/4;
ELSE
 incentive :=75;
END IF;
DBMS_OUTPUT.PUT_LINE ('incentive = ' || incentive);
      UPDATE emp
      SET salary = salary + incentive 
      WHERE employee_id = emp_id;
   
  END test1;
BEGIN
  test1(2300, 2000, 144);
  test1(3600, 3000, 145);
END;

6.Write a PL/SQL block to calculate the incentive of an employee whose ID is 110.

DECLARE
  incentive   NUMBER(8,2);
BEGIN
  SELECT salary * 0.12 INTO incentive
  FROM employee_259
  WHERE employee_id = 110;
DBMS_OUTPUT.PUT_LINE('Incentive  = ' || TO_CHAR(incentive));
END;

7. Write a block to display name, contact no and no of rows from employee table.

DECLARE
    vr_employee employees%ROWTYPE;
	z_emp_id NUMBER:=&employee_id;
BEGIN
    SELECT *
    INTO   vr_employee
    FROM   employee_259
    WHERE  employee_id = z_emp_id;

    dbms_output.Put_line (vr_employee.first_name
                          ||' '
                          ||vr_employee.last_name
                          ||' has an ID of '||z_emp_id);
EXCEPTION
    WHEN no_data_found THEN
      Raise_application_error(-20001, 'The Employee '
                                     || 'is not in the database');
END;

8.To develop a procedure named adjust_salary() sample database.
 Weâ€™ll update the salary information of employees in the employees table by 
using SQL UPDATE statement.

I couldn't develop